#include <stdio.h>
#include <stdlib.h>

// Define structure for node
struct node {
    int data;
    struct node *next;
};

// Initialize front and rear pointers
struct node *front = NULL;
struct node *rear = NULL;

// Function declarations
void enqueue(int);
void dequeue();
void display();
int peek();

int main() {
    int choice, val;

    do {
        printf("\n*** QUEUE MENU ***");
        printf("\n1. ENQUEUE (Insert)");
        printf("\n2. DEQUEUE (Delete)");
        printf("\n3. PEEK (Front element)");
        printf("\n4. DISPLAY (Show queue)");
        printf("\n5. EXIT");
        printf("\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to insert: ");
                scanf("%d", &val);
                enqueue(val);
                break;

            case 2:
                dequeue();
                break;

            case 3:
                val = peek();
                if (val != -1)
                    printf("Front element is: %d\n", val);
                break;

            case 4:
                display();
                break;

            case 5:
                printf("Exiting program.\n");
                break;

            default:
                printf("Invalid choice. Try again.\n");
        }
    } while (choice != 5);

    return 0;
}

// Function to insert element into the queue
void enqueue(int val) {
    struct node *newnode = (struct node *)malloc(sizeof(struct node));
    newnode->data = val;
    newnode->next = NULL;

    if (rear == NULL) { // Queue empty
        front = rear = newnode;
    } else {
        rear->next = newnode;
        rear = newnode;
    }

    printf("%d inserted into the queue.\n", val);
}

// Function to delete element from the queue
void dequeue() {
    if (front == NULL) {
        printf("UNDERFLOW: Queue is empty.\n");
        return;
    }

    struct node *temp = front;
    printf("Deleted element: %d\n", temp->data);
    front = front->next;
    free(temp);

    if (front == NULL)
        rear = NULL;
}

// Function to view the front element
int peek() {
    if (front == NULL) {
        printf("Queue is empty.\n");
        return -1;
    }
    return front->data;
}

// Function to display all elements of the queue
void display() {
    struct node *temp = front;
    if (temp == NULL) {
        printf("Queue is empty.\n");
        return;
    }

    printf("Queue elements: ");
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}
